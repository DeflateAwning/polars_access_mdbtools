name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    name: Build wheels
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    permissions:
      id-token: write   # For OIDC-based trusted publishing
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install mdtools build dependencies
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            # Remove mandb (to speed up apt installs).
            sudo apt-get remove -y mandb || true
            sudo rm -f /var/lib/man-db/auto-update
            sudo apt-get update
            sudo apt-get install -y \
              autoconf automake libtool pkg-config \
              bison flex make gcc \
              libglib2.0-dev gettext git build-essential
          else
            brew update
            brew install autoconf automake libtool pkg-config bison flex gettext glib gawk unixodbc
          fi

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: "3.12"

      - name: Set up Python (using uv)
        run: uv python install

      - name: Install project dependencies
        run: uv sync --all-extras

      - name: Build and bundle mdbtools
        run: |
          echo "Building mdbtools from source..."
          uv run python build_mdbtools.py

      - name: Show mdbtools build products
        run: |
          echo "Built mdbtools binaries:"
          du -ah src/polars_access_mdbtools/bin/

      - name: Build wheel
        run: uv build --wheel

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ runner.os }}
          path: dist/*.whl

  # Separate sdist build (only on Linux)
  sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: astral-sh/setup-uv@v5
        with:
          python-version: "3.12"

      - name: Build sdist
        run: uv build --sdist

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish:
    name: Publish to PyPI
    needs: [build, sdist]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download all built artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true  # Flattens wheel and sdist files.

      - name: Show contents to publish
        run: ls -lh dist/

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: "3.12"

      - name: Publish to PyPI
        run: uv publish --trusted-publishing always

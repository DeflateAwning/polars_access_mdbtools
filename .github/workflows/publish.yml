name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch: # Manual trigger

jobs:
  build:
    name: Build wheels for Linux and macOS
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    permissions:
      id-token: write   # For OIDC-based trusted publishing
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # --- Install system dependencies for mdbtools ---
      - name: Install build dependencies
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update
            sudo apt-get install -y \
              autoconf automake libtool pkg-config \
              bison flex make gcc \
              libglib2.0-dev gettext git
          else
            brew update
            brew install autoconf automake libtool pkg-config bison flex gettext glib
          fi

      # --- Install uv (Python + package manager) ---
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: "3.12"

      - name: Set up Python (using uv)
        run: uv python install

      # --- Install Python dependencies (including build tools) ---
      - name: Install project dependencies
        run: uv sync --all-extras

      # --- Build mdbtools from source (official Autotools process) ---
      - name: Build and bundle mdbtools
        run: |
          echo "Building mdbtools from source..."
          uv run python build_mdbtools.py

      # --- Build the Python package (wheel + sdist) ---
      - name: Build Python package
        run: uv build

      # --- Upload the built wheel as an artifact ---
      - name: Upload built wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ runner.os }}
          path: dist/*.whl

  publish:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download all built wheels
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: "3.12"

      # --- Publish all platform wheels to PyPI via OIDC ---
      - name: Publish to PyPI
        run: uv publish --trusted-publishing always
